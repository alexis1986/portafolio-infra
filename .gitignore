# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
plan.out

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac .DS_Store files
.DS_Store

# Ignore Windows Thumbs.db files
Thumbs.db

# Ignore editor and IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore log files
*.log

# Ignore temporary files
*.tmp
*.temp

# Ignore backup files
*.bak
*.backup

# Ignore SSH keys (if any are stored in the project)
*.pem
*.key
id_rsa*

# Ignore environment-specific files
.env
.env.local
.env.*.local

# Ignore Terraform plugin cache
.terraform.d/

# Ignore auto-generated documentation
docs/

# Ignore any local testing or development files
test/
tests/
*.test

# Ignore any local scripts that shouldn't be version controlled
local-*
*-local.*
.terraform.lock.hcl

# GitHub Actions artifacts
tfplan
*.tfplan
