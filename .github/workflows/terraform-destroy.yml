name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "destroy" to confirm destruction of all resources'
        required: true
        type: string

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  TF_VERSION: '1.3.0'

jobs:
  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment:
      name: production
    
    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "destroy" ]; then
            echo "❌ Confirmation failed. You must type 'destroy' to proceed."
            exit 1
          fi
          echo "✅ Confirmation validated"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials for Spaces
        run: |
          mkdir -p ~/.aws
          cat > ~/.aws/credentials << EOF
          [default]
          aws_access_key_id = ${{ secrets.SPACES_ACCESS_KEY_ID }}
          aws_secret_access_key = ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
          EOF

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Determine runner public IP
        id: ip
        run: echo "ip=$(curl -s https://ifconfig.me)" >> $GITHUB_OUTPUT

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Export kubeconfig file (for addons destroy)
        id: kube
        run: |
          terraform output -raw kubeconfig > kubeconfig || true
          if [ -f kubeconfig ]; then
            echo "KUBECONFIG_PATH=$PWD/kubeconfig" >> $GITHUB_ENV
          fi

      - name: Addons - Terraform Init
        if: env.KUBECONFIG_PATH != ''
        run: terraform init
        working-directory: addons

      - name: Addons - Terraform Destroy
        if: env.KUBECONFIG_PATH != ''
        run: |
          terraform destroy -auto-approve \
            -var="kubeconfig_file=${{ env.KUBECONFIG_PATH }}" \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="domain_base=${{ vars.TF_VAR_DOMAIN_BASE || 'alexdevvv.com' }}" \
            -var="letsencrypt_email=${{ vars.TF_VAR_LETSENCRYPT_EMAIL || 'alexis.castellano@gmail.com' }}" \
            -var="letsencrypt_environment=${{ vars.TF_VAR_LETSENCRYPT_ENVIRONMENT || 'production' }}"
        working-directory: addons

      - name: Terraform Plan Destroy
        id: plan
        run: |
          terraform plan -destroy -no-color -out=tfdestroy \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="region=${{ vars.TF_VAR_REGION || 'nyc3' }}" \
            -var="cluster_name=${{ vars.TF_VAR_CLUSTER_NAME || 'portafolio-cluster' }}" \
            -var="kubernetes_version=${{ vars.TF_VAR_KUBERNETES_VERSION || '' }}" \
            -var="tags=${{ vars.TF_VAR_TAGS || '[\"portafolio\"]' }}" \
            -var="vpc_name=${{ vars.TF_VAR_VPC_NAME || 'portafolio-vpc' }}" \
            -var="vpc_cidr=${{ vars.TF_VAR_VPC_CIDR || '10.10.0.0/16' }}" \
            -var="node_pool_name=${{ vars.TF_VAR_NODE_POOL_NAME || 'portafolio-pool' }}" \
            -var="node_pool_size=${{ vars.TF_VAR_NODE_POOL_SIZE || 's-1vcpu-1gb' }}" \
            -var="node_pool_min_nodes=${{ vars.TF_VAR_NODE_POOL_MIN_NODES || 1 }}" \
            -var="node_pool_max_nodes=${{ vars.TF_VAR_NODE_POOL_MAX_NODES || 2 }}" \
            -var="authorized_sources=[\"${{ steps.ip.outputs.ip }}/32\"]"

      - name: Show Destroy Plan
        run: |
          echo "### ⚠️ Resources to be DESTROYED:"
          terraform show tfdestroy

      - name: Terraform Destroy
        id: destroy
        run: terraform apply -auto-approve tfdestroy

      - name: Create Summary
        if: always()
        run: |
          echo "## Terraform Destroy Result" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.destroy.outcome }}" == "success" ]; then
            echo "### ✅ Infrastructure destroyed successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All resources have been destroyed from DigitalOcean." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Destroy failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the logs above for error details." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date -u)" >> $GITHUB_STEP_SUMMARY
